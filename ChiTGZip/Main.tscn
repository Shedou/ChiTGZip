[gd_scene load_steps=76 format=2]

[ext_resource path="res://Main.gd" type="Script" id=1]
[ext_resource path="res://GUI/buttons/buttons.png" type="Texture" id=2]
[ext_resource path="res://menu.gd" type="Script" id=3]
[ext_resource path="res://GUI/buttons/buttons_small.png" type="Texture" id=4]
[ext_resource path="res://base.gd" type="Script" id=5]
[ext_resource path="res://GUI/buttons/buttons_small_check.png" type="Texture" id=7]
[ext_resource path="res://7zip.gd" type="Script" id=8]
[ext_resource path="res://theme_text_transparent.tres" type="Theme" id=10]
[ext_resource path="res://settings.gd" type="Script" id=11]
[ext_resource path="res://about.gd" type="Script" id=12]
[ext_resource path="res://tar.gd" type="Script" id=13]
[ext_resource path="res://gzip.gd" type="Script" id=14]
[ext_resource path="res://Szip/add.gd" type="Script" id=15]
[ext_resource path="res://Szip/open.gd" type="Script" id=16]
[ext_resource path="res://Szip/other.gd" type="Script" id=17]
[ext_resource path="res://dialog.gd" type="Script" id=18]

[sub_resource type="AtlasTexture" id=52]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=53]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 320, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=54]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 160, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=55]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=56]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 160, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=31]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=32]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 320, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=33]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 160, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=34]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=35]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 160, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=51]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 160, 96 )

[sub_resource type="AtlasTexture" id=2]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 320, 0, 160, 96 )

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 0, 160, 96 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 160, 96 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 0, 160, 96 )

[sub_resource type="AtlasTexture" id=6]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 96, 160, 96 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 320, 96, 160, 96 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 96, 160, 96 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 96, 160, 96 )

[sub_resource type="AtlasTexture" id=10]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 96, 160, 96 )

[sub_resource type="AtlasTexture" id=11]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 192, 160, 96 )

[sub_resource type="AtlasTexture" id=12]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 320, 192, 160, 96 )

[sub_resource type="AtlasTexture" id=13]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 192, 160, 96 )

[sub_resource type="AtlasTexture" id=14]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 192, 160, 96 )

[sub_resource type="AtlasTexture" id=15]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 192, 160, 96 )

[sub_resource type="AtlasTexture" id=16]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 288, 160, 96 )

[sub_resource type="AtlasTexture" id=17]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 320, 288, 160, 96 )

[sub_resource type="AtlasTexture" id=18]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 288, 160, 96 )

[sub_resource type="AtlasTexture" id=19]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 288, 160, 96 )

[sub_resource type="AtlasTexture" id=20]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 288, 160, 96 )

[sub_resource type="AtlasTexture" id=21]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 384, 160, 96 )

[sub_resource type="AtlasTexture" id=22]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 320, 384, 160, 96 )

[sub_resource type="AtlasTexture" id=23]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 384, 160, 96 )

[sub_resource type="AtlasTexture" id=24]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 0, 384, 160, 96 )

[sub_resource type="AtlasTexture" id=25]
flags = 4
atlas = ExtResource( 2 )
region = Rect2( 160, 384, 160, 96 )

[sub_resource type="AtlasTexture" id=36]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=37]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 320, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=38]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 160, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=39]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 160, 60 )

[sub_resource type="AtlasTexture" id=40]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 80, 0, 80, 30 )

[sub_resource type="AtlasTexture" id=41]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 0, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=42]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 320, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=43]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 160, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=44]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 0, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=45]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 160, 60, 160, 60 )

[sub_resource type="AtlasTexture" id=46]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 0, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=47]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 320, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=48]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 160, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=49]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 0, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=50]
flags = 4
atlas = ExtResource( 7 )
region = Rect2( 160, 120, 160, 60 )

[sub_resource type="Theme" id=62]

[sub_resource type="AtlasTexture" id=57]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=58]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 320, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=59]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 160, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=60]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 120, 160, 60 )

[sub_resource type="AtlasTexture" id=61]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 120, 160, 60 )

[sub_resource type="Theme" id=63]
LineEdit/colors/font_color_uneditable = Color( 1, 1, 1, 1 )
TextEdit/colors/font_color_readonly = Color( 0.901961, 0.901961, 0.901961, 1 )
TextEdit/constants/line_spacing = 2

[sub_resource type="Shader" id=64]
code = "/*
Shader from Godot Shaders - the free shader library.
godotshaders.com/shader/VHS-and-CRT-monitor-effect

This shader is under CC0 license. Feel free to use, improve and 
change this shader according to your needs and consider sharing 
the modified result to godotshaders.com.
*/

shader_type canvas_item;

//*** IMPORTANT! ***/ 
// - If you are using this shader to affect the node it is applied to set 'overlay' to false (unchecked in the instepctor).
// - If you are using this shader as an overlay, and want the shader to affect the nodes below in the Scene hierarchy,
//   set 'overlay' to true (checked in the inspector).
// On Mac there is potentially a bug causing this to not work properly. If that is the case and you want to use the shader as an overlay
// change all \"overlay ? SCREEN_TEXTURE : TEXTURE\" to only \"SCREEN_TEXTURE\" on lines 129-140, and \"vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV);\"
// to \"vec2 uv = warp(SCREEN_UV);\" on line 98.
uniform bool overlay = false;

uniform float scanlines_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float scanlines_width : hint_range(0.0, 0.5) = 0.25;
uniform float grille_opacity : hint_range(0.0, 1.0) = 0.3;
uniform vec2 resolution = vec2(640.0, 480.0); // Set the number of rows and columns the texture will be divided in. Scanlines and grille will make a square based on these values

uniform bool pixelate = true; // Fill each square (\"pixel\") with a sampled color, creating a pixel look and a more accurate representation of how a CRT monitor would work.

uniform bool roll = true;
uniform float roll_speed = 8.0; // Positive values are down, negative are up
uniform float roll_size : hint_range(0.0, 100.0) = 15.0;
uniform float roll_variation : hint_range(0.1, 5.0) = 1.8; // This valie is not an exact science. You have to play around with the value to find a look you like. How this works is explained in the code below.
uniform float distort_intensity : hint_range(0.0, 0.2) = 0.05; // The distortion created by the rolling effect.

uniform float noise_opacity : hint_range(0.0, 1.0) = 0.4;
uniform float noise_speed = 5.0; // There is a movement in the noise pattern that can be hard to see first. This sets the speed of that movement.

uniform float static_noise_intensity : hint_range(0.0, 1.0) = 0.06;

uniform float aberration : hint_range(-1.0, 1.0) = 0.03; // Chromatic aberration, a distortion on each color channel.
uniform float brightness = 1.4; // When adding scanline gaps and grille the image can get very dark. Brightness tries to compensate for that.
uniform bool discolor = true; // Add a discolor effect simulating a VHS

uniform float warp_amount :hint_range(0.0, 5.0) = 1.0; // Warp the texture edges simulating the curved glass of a CRT monitor or old TV.
uniform bool clip_warp = false;

uniform float vignette_intensity = 0.4; // Size of the vignette, how far towards the middle it should go.
uniform float vignette_opacity : hint_range(0.0, 1.0) = 0.5;

// Used by the noise functin to generate a pseudo random value between 0.0 and 1.0
vec2 random(vec2 uv){
    uv = vec2( dot(uv, vec2(127.1,311.7) ),
               dot(uv, vec2(269.5,183.3) ) );
    return -1.0 + 2.0 * fract(sin(uv) * 43758.5453123);
}

// Generate a Perlin noise used by the distortion effects
float noise(vec2 uv) {
    vec2 uv_index = floor(uv);
    vec2 uv_fract = fract(uv);

    vec2 blur = smoothstep(0.0, 1.0, uv_fract);

    return mix( mix( dot( random(uv_index + vec2(0.0,0.0) ), uv_fract - vec2(0.0,0.0) ),
                     dot( random(uv_index + vec2(1.0,0.0) ), uv_fract - vec2(1.0,0.0) ), blur.x),
                mix( dot( random(uv_index + vec2(0.0,1.0) ), uv_fract - vec2(0.0,1.0) ),
                     dot( random(uv_index + vec2(1.0,1.0) ), uv_fract - vec2(1.0,1.0) ), blur.x), blur.y) * 0.5 + 0.5;
}

// Takes in the UV and warps the edges, creating the spherized effect
vec2 warp(vec2 uv){
	vec2 delta = uv - 0.5;
	float delta2 = dot(delta.xy, delta.xy);
	float delta4 = delta2 * delta2;
	float delta_offset = delta4 * warp_amount;
	
	return uv + delta * delta_offset;
}

// Adds a black border to hide stretched pixel created by the warp effect
float border (vec2 uv){
	float radius = min(warp_amount, 0.08);
	radius = max(min(min(abs(radius * 2.0), abs(1.0)), abs(1.0)), 1e-5);
	vec2 abs_uv = abs(uv * 2.0 - 1.0) - vec2(1.0, 1.0) + radius;
	float dist = length(max(vec2(0.0), abs_uv)) / radius;
	float square = smoothstep(0.96, 1.0, dist);
	return clamp(1.0 - square, 0.0, 1.0);
}

// Adds a vignette shadow to the edges of the image
float vignette(vec2 uv){
	uv *= 1.0 - uv.xy;
	float vignette = uv.x * uv.y * 15.0;
	return pow(vignette, vignette_intensity * vignette_opacity);
}

void fragment()
{
	vec2 uv = overlay ? warp(SCREEN_UV) : warp(UV); // Warp the uv. uv will be used in most cases instead of UV to keep the warping
	vec2 text_uv = uv;
	vec2 roll_uv = vec2(0.0);
	float time = roll ? TIME : 0.0;
	

	// Pixelate the texture based on the given resolution.
	if (pixelate)
	{
		text_uv = ceil(uv * resolution) / resolution;
	}
	
	// Create the rolling effect. We need roll_line a bit later to make the noise effect.
	// That is why this runs if roll is true OR noise_opacity is over 0.
	float roll_line = 0.0;
	if (roll || noise_opacity > 0.0)
	{
		// Create the areas/lines where the texture will be distorted.
		roll_line = smoothstep(0.3, 0.9, sin(uv.y * roll_size - (time * roll_speed) ) );
		// Create more lines of a different size and apply to the first set of lines. This creates a bit of variation.
		roll_line *= roll_line * smoothstep(0.3, 0.9, sin(uv.y * roll_size * roll_variation - (time * roll_speed * roll_variation) ) );
		// Distort the UV where where the lines are
		roll_uv = vec2(( roll_line * distort_intensity * (1.-UV.x)), 0.0);
	}
	
	vec4 text;
	if (roll)
	{
		// If roll is true distort the texture with roll_uv. The texture is split up into RGB to 
		// make some chromatic aberration. We apply the aberration to the red and green channels accorging to the aberration parameter
		// and intensify it a bit in the roll distortion.
		text.r = texture(SCREEN_TEXTURE, text_uv + roll_uv * 0.8 + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv + roll_uv * 1.2 - vec2(aberration, 0.0) * .1 ).g;
		text.b = texture(SCREEN_TEXTURE, text_uv + roll_uv).b;
		text.a = 1.0;
	}
	else
	{
		// If roll is false only apply the aberration without any distorion. The aberration values are very small so the .1 is only 
		// to make the slider in the Inspector less sensitive.
		text.r = texture(SCREEN_TEXTURE, text_uv + vec2(aberration, 0.0) * .1).r;
		text.g = texture(SCREEN_TEXTURE, text_uv - vec2(aberration, 0.0) * .1).g;
		text.b = texture(SCREEN_TEXTURE, text_uv).b;
		text.a = 1.0;
	}
	
	float r = text.r;
	float g = text.g;
	float b = text.b;
	
	uv = warp(UV);
	
	// CRT monitors don't have pixels but groups of red, green and blue dots or lines, called grille. We isolate the texture's color channels 
	// and divide it up in 3 offsetted lines to show the red, green and blue colors next to each other, with a small black gap between.
	if (grille_opacity > 0.0){
		
		float g_r = smoothstep(0.85, 0.95, abs(sin(uv.x * (resolution.x * 3.14159265))));
		r = mix(r, r * g_r, grille_opacity);
		
		float g_g = smoothstep(0.85, 0.95, abs(sin(1.05 + uv.x * (resolution.x * 3.14159265))));
		g = mix(g, g * g_g, grille_opacity);
		
		float b_b = smoothstep(0.85, 0.95, abs(sin(2.1 + uv.x * (resolution.x * 3.14159265))));
		b = mix(b, b * b_b, grille_opacity);
		
	}
	
	// Apply the grille to the texture's color channels and apply Brightness. Since the grille and the scanlines (below) make the image very dark you
	// can compensate by increasing the brightness.
	text.r = clamp(r * brightness, 0.0, 1.0);
	text.g = clamp(g * brightness, 0.0, 1.0);
	text.b = clamp(b * brightness, 0.0, 1.0);
	
	// Scanlines are the horizontal lines that make up the image on a CRT monitor. 
	// Here we are actual setting the black gap between each line, which I guess is not the right definition of the word, but you get the idea  
	float scanlines = 0.5;
	if (scanlines_opacity > 0.0)
	{
		// Same technique as above, create lines with sine and applying it to the texture. Smoothstep to allow setting the line size.
		scanlines = smoothstep(scanlines_width, scanlines_width + 0.5, abs(sin(uv.y * (resolution.y * 3.14159265))));
		text.rgb = mix(text.rgb, text.rgb * vec3(scanlines), scanlines_opacity);
	}
	
	// Apply the banded noise.
	if (noise_opacity > 0.0)
	{
		// Generate a noise pattern that is very stretched horizontally, and animate it with noise_speed
		float noise = smoothstep(0.4, 0.5, noise(uv * vec2(2.0, 200.0) + vec2(10.0, (TIME * (noise_speed))) ) );
		
		// We use roll_line (set above) to define how big the noise should be vertically (multiplying cuts off all black parts).
		// We also add in some basic noise with random() to break up the noise pattern above. The noise is sized according to 
		// the resolution value set in the inspector. If you don't like this look you can 
		// change \"ceil(uv * resolution) / resolution\" to only \"uv\" to make it less pixelated. Or multiply resolution with som value
		// greater than 1.0 to make them smaller.
		roll_line *= noise * scanlines * clamp(random((ceil(uv * resolution) / resolution) + vec2(TIME * 0.8, 0.0)).x + 0.8, 0.0, 1.0);
		// Add it to the texture based on noise_opacity
		text.rgb = clamp(mix(text.rgb, text.rgb + roll_line, noise_opacity), vec3(0.0), vec3(1.0));
	}
	
	// Apply static noise by generating it over the whole screen in the same way as above
	if (static_noise_intensity > 0.0)
	{
		text.rgb += clamp(random((ceil(uv * resolution) / resolution) + fract(TIME)).x, 0.0, 1.0) * static_noise_intensity;
	}
	
	// Apply a black border to hide imperfections caused by the warping.
	// Also apply the vignette
	text.rgb *= border(uv);
	text.rgb *= vignette(uv);
	// Hides the black border and make that area transparent. Good if you want to add the the texture on top an image of a TV or monitor.
	if (clip_warp)
	{
		text.a = border(uv);
	}
	
	// Apply discoloration to get a VHS look (lower saturation and higher contrast)
	// You can play with the values below or expose them in the Inspector.
	float saturation = 0.5;
	float contrast = 1.2;
	if (discolor)
	{
		// Saturation
		vec3 greyscale = vec3(text.r + text.g + text.b) / 3.;
		text.rgb = mix(text.rgb, greyscale, saturation);
		
		// Contrast
		float midpoint = pow(0.5, 2.2);
		text.rgb = (text.rgb - vec3(midpoint)) * contrast + midpoint;
	}
	
	COLOR = text;
}"

[sub_resource type="ShaderMaterial" id=65]
shader = SubResource( 64 )
shader_param/overlay = true
shader_param/scanlines_opacity = 0.331
shader_param/scanlines_width = 0.246
shader_param/grille_opacity = 0.16
shader_param/resolution = Vector2( 740, 500 )
shader_param/pixelate = false
shader_param/roll = false
shader_param/roll_speed = 8.0
shader_param/roll_size = 3.571
shader_param/roll_variation = 0.792
shader_param/distort_intensity = 0.05
shader_param/noise_opacity = 0.017
shader_param/noise_speed = 2.725
shader_param/static_noise_intensity = 0.042
shader_param/aberration = 0.002
shader_param/brightness = 1.639
shader_param/discolor = true
shader_param/warp_amount = 0.0
shader_param/clip_warp = false
shader_param/vignette_intensity = 0.367
shader_param/vignette_opacity = 0.271

[node name="Main" type="Node2D"]
script = ExtResource( 1 )

[node name="base" type="Control" parent="."]
margin_right = 740.0
margin_bottom = 500.0
script = ExtResource( 5 )

[node name="BG_input" type="ColorRect" parent="base"]
margin_left = 130.0
margin_top = 10.0
margin_right = 730.0
margin_bottom = 40.0
color = Color( 0.235294, 0.235294, 0.235294, 1 )

[node name="Input_path2" type="TextEdit" parent="base"]
visible = false
margin_left = 210.0
margin_top = 12.0
margin_right = 730.0
margin_bottom = 46.0
focus_mode = 0
theme = ExtResource( 10 )
text = "input path"
readonly = true
shortcut_keys_enabled = false
virtual_keyboard_enabled = false
middle_mouse_paste_enabled = false
drag_and_drop_selection_enabled = false

[node name="Input_path" type="LineEdit" parent="base"]
margin_left = 210.0
margin_top = 10.0
margin_right = 730.0
margin_bottom = 40.0
focus_mode = 0
theme = ExtResource( 10 )
editable = false
virtual_keyboard_enabled = false
shortcut_keys_enabled = false
middle_mouse_paste_enabled = false
placeholder_text = "Select input file or folder"
placeholder_alpha = 0.5

[node name="BTN_input" type="TextureButton" parent="base"]
margin_left = 120.0
margin_top = 10.0
margin_right = 200.0
margin_bottom = 40.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
texture_normal = SubResource( 52 )
texture_pressed = SubResource( 53 )
texture_hover = SubResource( 54 )
texture_disabled = SubResource( 55 )
texture_focused = SubResource( 56 )
expand = true

[node name="BG_right" type="ColorRect" parent="base"]
margin_left = 120.0
margin_top = 50.0
margin_right = 730.0
margin_bottom = 450.0
color = Color( 0.235294, 0.235294, 0.235294, 1 )

[node name="BG_output" type="ColorRect" parent="base"]
margin_left = 130.0
margin_top = 460.0
margin_right = 730.0
margin_bottom = 490.0
color = Color( 0.235294, 0.235294, 0.235294, 1 )

[node name="BTN_output" type="TextureButton" parent="base"]
margin_left = 120.0
margin_top = 460.0
margin_right = 200.0
margin_bottom = 490.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
texture_normal = SubResource( 31 )
texture_pressed = SubResource( 32 )
texture_hover = SubResource( 33 )
texture_disabled = SubResource( 34 )
texture_focused = SubResource( 35 )
expand = true

[node name="Output_path" type="TextEdit" parent="base"]
margin_left = 210.0
margin_top = 462.0
margin_right = 730.0
margin_bottom = 496.0
focus_mode = 0
theme = ExtResource( 10 )
readonly = true
shortcut_keys_enabled = false
virtual_keyboard_enabled = false
middle_mouse_paste_enabled = false
drag_and_drop_selection_enabled = false

[node name="main_menu" type="Control" parent="."]
margin_left = 10.0
margin_top = 10.0
margin_right = 110.0
margin_bottom = 490.0
script = ExtResource( 3 )

[node name="BG" type="ColorRect" parent="main_menu"]
margin_right = 100.0
margin_bottom = 480.0
color = Color( 0.152941, 0.152941, 0.152941, 1 )

[node name="BTN_Szip" type="TextureButton" parent="main_menu"]
margin_left = 10.0
margin_top = 10.0
margin_right = 90.0
margin_bottom = 58.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
pressed = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 51 )
texture_pressed = SubResource( 2 )
texture_hover = SubResource( 3 )
texture_disabled = SubResource( 4 )
texture_focused = SubResource( 5 )
expand = true

[node name="BTN_tar" type="TextureButton" parent="main_menu"]
margin_left = 10.0
margin_top = 68.0
margin_right = 90.0
margin_bottom = 116.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 6 )
texture_pressed = SubResource( 7 )
texture_hover = SubResource( 8 )
texture_disabled = SubResource( 9 )
texture_focused = SubResource( 10 )
expand = true

[node name="BTN_gzip" type="TextureButton" parent="main_menu"]
margin_left = 10.0
margin_top = 128.0
margin_right = 90.0
margin_bottom = 176.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 11 )
texture_pressed = SubResource( 12 )
texture_hover = SubResource( 13 )
texture_disabled = SubResource( 14 )
texture_focused = SubResource( 15 )
expand = true

[node name="BTN_settings" type="TextureButton" parent="main_menu"]
margin_left = 10.0
margin_top = 342.0
margin_right = 90.0
margin_bottom = 390.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 16 )
texture_pressed = SubResource( 17 )
texture_hover = SubResource( 18 )
texture_disabled = SubResource( 19 )
texture_focused = SubResource( 20 )
expand = true

[node name="BTN_about" type="TextureButton" parent="main_menu"]
margin_left = 10.0
margin_top = 402.0
margin_right = 90.0
margin_bottom = 450.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 21 )
texture_pressed = SubResource( 22 )
texture_hover = SubResource( 23 )
texture_disabled = SubResource( 24 )
texture_focused = SubResource( 25 )
expand = true

[node name="version" type="Label" parent="main_menu"]
margin_top = 450.0
margin_right = 100.0
margin_bottom = 480.0
text = "ChiTGZip v1.0"
align = 1
valign = 1
clip_text = true

[node name="Szip" type="Control" parent="."]
margin_left = 120.0
margin_top = 50.0
margin_right = 730.0
margin_bottom = 450.0
script = ExtResource( 8 )

[node name="BTN_add" type="TextureButton" parent="Szip"]
margin_left = 5.0
margin_top = 5.0
margin_right = 85.0
margin_bottom = 35.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
pressed = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 36 )
texture_pressed = SubResource( 37 )
texture_hover = SubResource( 38 )
texture_disabled = SubResource( 39 )
texture_focused = SubResource( 40 )
expand = true

[node name="BTN_open" type="TextureButton" parent="Szip"]
margin_left = 90.0
margin_top = 5.0
margin_right = 170.0
margin_bottom = 35.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 41 )
texture_pressed = SubResource( 42 )
texture_hover = SubResource( 43 )
texture_disabled = SubResource( 44 )
texture_focused = SubResource( 45 )
expand = true

[node name="BTN_other" type="TextureButton" parent="Szip"]
margin_left = 175.0
margin_top = 5.0
margin_right = 255.0
margin_bottom = 35.0
focus_mode = 0
mouse_default_cursor_shape = 2
toggle_mode = true
action_mode = 0
enabled_focus_mode = 0
texture_normal = SubResource( 46 )
texture_pressed = SubResource( 47 )
texture_hover = SubResource( 48 )
texture_disabled = SubResource( 49 )
texture_focused = SubResource( 50 )
expand = true

[node name="caption" type="Label" parent="Szip"]
margin_left = 265.0
margin_top = 5.0
margin_right = 600.0
margin_bottom = 35.0
theme = SubResource( 62 )
text = "caption"
align = 1
valign = 3

[node name="add" type="Control" parent="Szip"]
margin_top = 40.0
margin_right = 610.0
margin_bottom = 400.0
script = ExtResource( 15 )

[node name="BG" type="ColorRect" parent="Szip/add"]
margin_right = 610.0
margin_bottom = 360.0
color = Color( 0.388235, 0.34902, 0.427451, 1 )

[node name="BTN_archive" type="TextureButton" parent="Szip/add"]
margin_left = 265.0
margin_top = 320.0
margin_right = 345.0
margin_bottom = 350.0
focus_mode = 0
mouse_default_cursor_shape = 2
enabled_focus_mode = 0
texture_normal = SubResource( 57 )
texture_pressed = SubResource( 58 )
texture_hover = SubResource( 59 )
texture_disabled = SubResource( 60 )
texture_focused = SubResource( 61 )
expand = true

[node name="open" type="Control" parent="Szip"]
visible = false
margin_top = 40.0
margin_right = 610.0
margin_bottom = 400.0
script = ExtResource( 16 )

[node name="BG" type="ColorRect" parent="Szip/open"]
margin_right = 610.0
margin_bottom = 360.0
color = Color( 0.34902, 0.364706, 0.427451, 1 )

[node name="other" type="Control" parent="Szip"]
visible = false
margin_top = 40.0
margin_right = 610.0
margin_bottom = 400.0
script = ExtResource( 17 )

[node name="BG" type="ColorRect" parent="Szip/other"]
margin_right = 610.0
margin_bottom = 360.0
color = Color( 0.34902, 0.427451, 0.376471, 1 )

[node name="tar" type="Control" parent="."]
visible = false
margin_left = 120.0
margin_top = 50.0
margin_right = 730.0
margin_bottom = 450.0
script = ExtResource( 13 )

[node name="gzip" type="Control" parent="."]
visible = false
margin_left = 120.0
margin_top = 50.0
margin_right = 730.0
margin_bottom = 450.0
script = ExtResource( 14 )

[node name="settings" type="Control" parent="."]
visible = false
margin_left = 120.0
margin_top = 10.0
margin_right = 730.0
margin_bottom = 490.0
script = ExtResource( 11 )

[node name="BG" type="ColorRect" parent="settings"]
margin_right = 610.0
margin_bottom = 480.0
color = Color( 0.470588, 0.470588, 0.470588, 1 )

[node name="Button3" type="Button" parent="settings"]
margin_left = 50.0
margin_top = 141.0
margin_right = 183.0
margin_bottom = 215.0
text = "1"

[node name="Button4" type="Button" parent="settings"]
margin_left = 166.0
margin_top = 227.0
margin_right = 240.0
margin_bottom = 268.0
text = "1.25"

[node name="Button5" type="Button" parent="settings"]
margin_left = 268.0
margin_top = 176.0
margin_right = 359.0
margin_bottom = 227.0
text = "1.5"

[node name="Button6" type="Button" parent="settings"]
margin_left = 406.0
margin_top = 113.0
margin_right = 497.0
margin_bottom = 164.0
text = "2"

[node name="about" type="Control" parent="."]
visible = false
margin_left = 120.0
margin_top = 10.0
margin_right = 730.0
margin_bottom = 490.0
script = ExtResource( 12 )

[node name="BG" type="ColorRect" parent="about"]
margin_right = 610.0
margin_bottom = 480.0
color = Color( 0.152941, 0.152941, 0.152941, 1 )

[node name="TextEdit" type="TextEdit" parent="about"]
margin_left = 20.0
margin_top = 77.0
margin_right = 591.0
margin_bottom = 463.0
focus_mode = 0
theme = ExtResource( 10 )
text = "dsfhg
ghihfg
dxfghfg
var test : Vector2 = Vector2(512, 256);"
readonly = true
highlight_current_line = true
syntax_highlighting = true
virtual_keyboard_enabled = false
middle_mouse_paste_enabled = false
drag_and_drop_selection_enabled = false
wrap_enabled = true

[node name="dialog" type="Control" parent="."]
visible = false
margin_left = 10.0
margin_top = 10.0
margin_right = 730.0
margin_bottom = 490.0
script = ExtResource( 18 )

[node name="BG" type="ColorRect" parent="dialog"]
margin_right = 720.0
margin_bottom = 480.0
color = Color( 0.152941, 0.152941, 0.152941, 1 )

[node name="TextEdit" type="TextEdit" parent="dialog"]
margin_left = 72.0
margin_top = 26.0
margin_right = 643.0
margin_bottom = 412.0
focus_mode = 0
theme = SubResource( 63 )
text = "dsfhg
ghihfg
dxfghfg"
readonly = true
highlight_current_line = true
virtual_keyboard_enabled = false
middle_mouse_paste_enabled = false
drag_and_drop_selection_enabled = false
wrap_enabled = true

[node name="FileDialogSelect" type="FileDialog" parent="."]
margin_left = 20.0
margin_top = 30.0
margin_right = 720.0
margin_bottom = 470.0
window_title = "Open a File or Directory"
mode = 3
access = 2
show_hidden_files = true

[node name="PathDialogSelect" type="FileDialog" parent="."]
margin_left = 20.0
margin_top = 30.0
margin_right = 720.0
margin_bottom = 470.0
access = 2
show_hidden_files = true

[node name="Label" type="Label" parent="."]
margin_left = 113.0
margin_top = 86.0
margin_right = 710.0
margin_bottom = 397.0

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
material = SubResource( 65 )
margin_right = 740.0
margin_bottom = 500.0
mouse_filter = 2

[connection signal="gui_input" from="base/Input_path" to="." method="_on_Input_path_gui_input"]
[connection signal="pressed" from="base/BTN_input" to="." method="_on_BTN_input_pressed"]
[connection signal="pressed" from="base/BTN_output" to="." method="_on_BTN_output_pressed"]
[connection signal="pressed" from="main_menu/BTN_Szip" to="main_menu" method="_on_BTN_7zip_pressed"]
[connection signal="pressed" from="main_menu/BTN_tar" to="main_menu" method="_on_BTN_tar_pressed"]
[connection signal="pressed" from="main_menu/BTN_gzip" to="main_menu" method="_on_BTN_gzip_pressed"]
[connection signal="pressed" from="main_menu/BTN_settings" to="main_menu" method="_on_BTN_settings_pressed"]
[connection signal="pressed" from="main_menu/BTN_about" to="main_menu" method="_on_BTN_about_pressed"]
[connection signal="pressed" from="Szip/BTN_add" to="Szip" method="_on_BTN_add_pressed"]
[connection signal="pressed" from="Szip/BTN_open" to="Szip" method="_on_BTN_open_pressed"]
[connection signal="pressed" from="Szip/BTN_other" to="Szip" method="_on_BTN_other_pressed"]
[connection signal="pressed" from="Szip/add/BTN_archive" to="Szip/add" method="_on_BTN_archive_pressed"]
[connection signal="pressed" from="settings/Button3" to="settings" method="_on_Button3_pressed"]
[connection signal="pressed" from="settings/Button4" to="settings" method="_on_Button4_pressed"]
[connection signal="pressed" from="settings/Button5" to="settings" method="_on_Button5_pressed"]
[connection signal="pressed" from="settings/Button6" to="settings" method="_on_Button6_pressed"]
[connection signal="dir_selected" from="FileDialogSelect" to="." method="_on_FileDialogSelect_dir_selected"]
[connection signal="file_selected" from="FileDialogSelect" to="." method="_on_FileDialogSelect_file_selected"]
[connection signal="dir_selected" from="PathDialogSelect" to="." method="_on_PathDialogSelect_dir_selected"]
